Source: golang-github-cloudflare-redoctober
Section: golang
Priority: optional
Maintainer: Debian Go Packaging Team <team+pkg-go@tracker.debian.org>
Uploaders: Tim Potter <tpot@hpe.com>,
Build-Depends: debhelper-compat (= 13),
               dh-golang,
               golang-any,
               golang-github-coreos-go-systemd-dev (>= 17~),
               golang-github-prometheus-client-golang-dev,
               golang-golang-x-crypto-dev,
Standards-Version: 4.5.1
Homepage: https://github.com/cloudflare/redoctober
Vcs-Browser: https://salsa.debian.org/go-team/packages/golang-github-cloudflare-redoctober
Vcs-Git: https://salsa.debian.org/go-team/packages/golang-github-cloudflare-redoctober.git
XS-Go-Import-Path: github.com/cloudflare/redoctober
Rules-Requires-Root: no
Testsuite: autopkgtest-pkg-go

Package: golang-github-cloudflare-redoctober-dev
Architecture: all
Depends: golang-github-coreos-go-systemd-dev (>= 17~),
         golang-github-prometheus-client-golang-dev,
         golang-golang-x-crypto-dev,
         ${misc:Depends},
Description: Software-based two-man rule style (development files)
 Red October is a software-based two-man rule style encryption and
 decryption server.  The two-man rule is a control mechanism designed
 to achieve a high level of security by requiring the presence of two
 authorized people at all times. In the case of Red October the
 two-man rule is implemented by encrypting data in such as way as to
 require two authorised key-holds to decrypt it.
 .
 This package contains the development files.

Package: golang-redoctober
Architecture: any
Built-Using: ${misc:Built-Using},
Depends: ${misc:Depends},
         ${shlibs:Depends},
Description: Software-based two-man rule style encryption and decryption server
 Red October is a software-based two-man rule style encryption and
 decryption server.  The two-man rule is a control mechanism designed
 to achieve a high level of security by requiring the presence of two
 authorized people at all times. In the case of Red October the
 two-man rule is implemented by encrypting data in such as way as to
 require two authorised key-holds to decrypt it.
 .
 This package contains the server and command-line client.
